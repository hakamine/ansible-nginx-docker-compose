server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # self signed certificates
    ssl_certificate /etc/ssl/sslgen/selfsigned-cert.pem;
    ssl_certificate_key /etc/ssl/sslgen/selfsigned-privkey.pem;

    # SSL parameters (based on mozilla SSL configuration generator)
    # (do not include stapling config as using self-signed cert)
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    ssl_dhparam /etc/ssl/sslgen/dhparam.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    add_header Strict-Transport-Security "max-age=63072000" always;

    server_name _;

    root "/usr/share/nginx/html";
    index index.html;
{% if nginxdc_le_enable | bool %}
    # For certbot (let's encrypt)
    location /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
{% endif %}
}

server {
    listen 80;
    listen [::]:80;

    server_name _;
{% if nginxdc_le_enable | bool %}
    # For certbot (let's encrypt)
    location /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
{% endif %}

    # redirect to https
    location / {
        return 301 https://$host$request_uri;
    }
}